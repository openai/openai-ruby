module OpenAI
  module Models
    type vector_store_list_params =
      {
        after: String,
        before: String,
        limit: Integer,
        order: OpenAI::Models::VectorStoreListParams::order
      }
      & OpenAI::request_parameters

    class VectorStoreListParams < OpenAI::BaseModel
      extend OpenAI::RequestParameters::Converter
      include OpenAI::RequestParameters

      attr_reader after: String?

      def after=: (String) -> String

      attr_reader before: String?

      def before=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader order: OpenAI::Models::VectorStoreListParams::order?

      def order=: (
        OpenAI::Models::VectorStoreListParams::order
      ) -> OpenAI::Models::VectorStoreListParams::order

      def initialize: (
        ?after: String,
        ?before: String,
        ?limit: Integer,
        ?order: OpenAI::Models::VectorStoreListParams::order,
        ?request_options: OpenAI::request_opts
      ) -> void

      def to_hash: -> OpenAI::Models::vector_store_list_params

      type order = :asc | :desc

      module Order
        extend OpenAI::Enum

        ASC: :asc
        DESC: :desc

        def self.values: -> ::Array[OpenAI::Models::VectorStoreListParams::order]
      end
    end
  end
end
