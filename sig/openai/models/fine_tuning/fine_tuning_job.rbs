module OpenAI
  module Models
    
    class FineTuningJob = FineTuning::FineTuningJob

    module FineTuning
      type fine_tuning_job =
        {
          id: String,
          created_at: Integer,
          error: OpenAI::Models::FineTuning::FineTuningJob::Error?,
          fine_tuned_model: String?,
          finished_at: Integer?,
          hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters,
          model: String,
          object: :"fine_tuning.job",
          organization_id: String,
          result_files: ::Array[String],
          seed: Integer,
          status: OpenAI::Models::FineTuning::FineTuningJob::status,
          trained_tokens: Integer?,
          training_file: String,
          validation_file: String?,
          estimated_finish: Integer?,
          integrations: ::Array[OpenAI::Models::FineTuning::FineTuningJobWandbIntegrationObject]?,
          metadata: OpenAI::Models::metadata?,
          method_: OpenAI::Models::FineTuning::FineTuningJob::Method
        }

      class FineTuningJob < OpenAI::BaseModel
        attr_accessor id: String

        attr_accessor created_at: Integer

        attr_accessor error: OpenAI::Models::FineTuning::FineTuningJob::Error?

        attr_accessor fine_tuned_model: String?

        attr_accessor finished_at: Integer?

        attr_accessor hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters

        attr_accessor model: String

        attr_accessor object: :"fine_tuning.job"

        attr_accessor organization_id: String

        attr_accessor result_files: ::Array[String]

        attr_accessor seed: Integer

        attr_accessor status: OpenAI::Models::FineTuning::FineTuningJob::status

        attr_accessor trained_tokens: Integer?

        attr_accessor training_file: String

        attr_accessor validation_file: String?

        attr_accessor estimated_finish: Integer?

        attr_accessor integrations: ::Array[OpenAI::Models::FineTuning::FineTuningJobWandbIntegrationObject]?

        attr_accessor metadata: OpenAI::Models::metadata?

        attr_reader method_: OpenAI::Models::FineTuning::FineTuningJob::Method?

        def method_=: (
          OpenAI::Models::FineTuning::FineTuningJob::Method
        ) -> OpenAI::Models::FineTuning::FineTuningJob::Method

        def initialize:
          (
            id: String,
            created_at: Integer,
            error: OpenAI::Models::FineTuning::FineTuningJob::Error?,
            fine_tuned_model: String?,
            finished_at: Integer?,
            hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters,
            model: String,
            organization_id: String,
            result_files: ::Array[String],
            seed: Integer,
            status: OpenAI::Models::FineTuning::FineTuningJob::status,
            trained_tokens: Integer?,
            training_file: String,
            validation_file: String?,
            estimated_finish: Integer?,
            integrations: ::Array[OpenAI::Models::FineTuning::FineTuningJobWandbIntegrationObject]?,
            metadata: OpenAI::Models::metadata?,
            method_: OpenAI::Models::FineTuning::FineTuningJob::Method,
            object: :"fine_tuning.job"
          ) -> void
          | (
            ?OpenAI::Models::FineTuning::fine_tuning_job
            | OpenAI::BaseModel data
          ) -> void

        def to_hash: -> OpenAI::Models::FineTuning::fine_tuning_job

        type error = { code: String, message: String, param: String? }

        class Error < OpenAI::BaseModel
          attr_accessor code: String

          attr_accessor message: String

          attr_accessor param: String?

          def initialize:
            (code: String, message: String, param: String?) -> void
            | (
              ?OpenAI::Models::FineTuning::FineTuningJob::error
              | OpenAI::BaseModel data
            ) -> void

          def to_hash: -> OpenAI::Models::FineTuning::FineTuningJob::error
        end

        type hyperparameters =
          {
            batch_size: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::batch_size,
            learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::learning_rate_multiplier,
            n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::n_epochs
          }

        class Hyperparameters < OpenAI::BaseModel
          attr_reader batch_size: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::batch_size?

          def batch_size=: (
            OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::batch_size
          ) -> OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::batch_size

          attr_reader learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::learning_rate_multiplier?

          def learning_rate_multiplier=: (
            OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::learning_rate_multiplier
          ) -> OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::learning_rate_multiplier

          attr_reader n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::n_epochs?

          def n_epochs=: (
            OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::n_epochs
          ) -> OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::n_epochs

          def initialize:
            (
              batch_size: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::batch_size,
              learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::learning_rate_multiplier,
              n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Hyperparameters::n_epochs
            ) -> void
            | (
              ?OpenAI::Models::FineTuning::FineTuningJob::hyperparameters
              | OpenAI::BaseModel data
            ) -> void

          def to_hash: -> OpenAI::Models::FineTuning::FineTuningJob::hyperparameters

          type batch_size = :auto | Integer

          class BatchSize < OpenAI::Union
            def self.variants: -> [:auto, Integer]
          end

          type learning_rate_multiplier = :auto | Float

          class LearningRateMultiplier < OpenAI::Union
            def self.variants: -> [:auto, Float]
          end

          type n_epochs = :auto | Integer

          class NEpochs < OpenAI::Union
            def self.variants: -> [:auto, Integer]
          end
        end

        type status =
          :validating_files
          | :queued
          | :running
          | :succeeded
          | :failed
          | :cancelled

        class Status < OpenAI::Enum
          VALIDATING_FILES: :validating_files
          QUEUED: :queued
          RUNNING: :running
          SUCCEEDED: :succeeded
          FAILED: :failed
          CANCELLED: :cancelled

          def self.values: -> ::Array[OpenAI::Models::FineTuning::FineTuningJob::status]
        end

        type method_ =
          {
            dpo: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo,
            supervised: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised,
            type: OpenAI::Models::FineTuning::FineTuningJob::Method::type_
          }

        class Method < OpenAI::BaseModel
          attr_reader dpo: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo?

          def dpo=: (
            OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo
          ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo

          attr_reader supervised: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised?

          def supervised=: (
            OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised
          ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised

          attr_reader type: OpenAI::Models::FineTuning::FineTuningJob::Method::type_?

          def type=: (
            OpenAI::Models::FineTuning::FineTuningJob::Method::type_
          ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::type_

          def initialize:
            (
              dpo: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo,
              supervised: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised,
              type: OpenAI::Models::FineTuning::FineTuningJob::Method::type_
            ) -> void
            | (
              ?OpenAI::Models::FineTuning::FineTuningJob::method_
              | OpenAI::BaseModel data
            ) -> void

          def to_hash: -> OpenAI::Models::FineTuning::FineTuningJob::method_

          type dpo =
            {
              hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters
            }

          class Dpo < OpenAI::BaseModel
            attr_reader hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters?

            def hyperparameters=: (
              OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters
            ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters

            def initialize:
              (
                hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters
              ) -> void
              | (
                ?OpenAI::Models::FineTuning::FineTuningJob::Method::dpo
                | OpenAI::BaseModel data
              ) -> void

            def to_hash: -> OpenAI::Models::FineTuning::FineTuningJob::Method::dpo

            type hyperparameters =
              {
                batch_size: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::batch_size,
                beta: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::beta,
                learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::learning_rate_multiplier,
                n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::n_epochs
              }

            class Hyperparameters < OpenAI::BaseModel
              attr_reader batch_size: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::batch_size?

              def batch_size=: (
                OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::batch_size
              ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::batch_size

              attr_reader beta: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::beta?

              def beta=: (
                OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::beta
              ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::beta

              attr_reader learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::learning_rate_multiplier?

              def learning_rate_multiplier=: (
                OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::learning_rate_multiplier
              ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::learning_rate_multiplier

              attr_reader n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::n_epochs?

              def n_epochs=: (
                OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::n_epochs
              ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::n_epochs

              def initialize:
                (
                  batch_size: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::batch_size,
                  beta: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::beta,
                  learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::learning_rate_multiplier,
                  n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::Hyperparameters::n_epochs
                ) -> void
                | (
                  ?OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::hyperparameters
                  | OpenAI::BaseModel data
                ) -> void

              def to_hash: -> OpenAI::Models::FineTuning::FineTuningJob::Method::Dpo::hyperparameters

              type batch_size = :auto | Integer

              class BatchSize < OpenAI::Union
                def self.variants: -> [:auto, Integer]
              end

              type beta = :auto | Float

              class Beta < OpenAI::Union
                def self.variants: -> [:auto, Float]
              end

              type learning_rate_multiplier = :auto | Float

              class LearningRateMultiplier < OpenAI::Union
                def self.variants: -> [:auto, Float]
              end

              type n_epochs = :auto | Integer

              class NEpochs < OpenAI::Union
                def self.variants: -> [:auto, Integer]
              end
            end
          end

          type supervised =
            {
              hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters
            }

          class Supervised < OpenAI::BaseModel
            attr_reader hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters?

            def hyperparameters=: (
              OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters
            ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters

            def initialize:
              (
                hyperparameters: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters
              ) -> void
              | (
                ?OpenAI::Models::FineTuning::FineTuningJob::Method::supervised
                | OpenAI::BaseModel data
              ) -> void

            def to_hash: -> OpenAI::Models::FineTuning::FineTuningJob::Method::supervised

            type hyperparameters =
              {
                batch_size: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::batch_size,
                learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::learning_rate_multiplier,
                n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::n_epochs
              }

            class Hyperparameters < OpenAI::BaseModel
              attr_reader batch_size: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::batch_size?

              def batch_size=: (
                OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::batch_size
              ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::batch_size

              attr_reader learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::learning_rate_multiplier?

              def learning_rate_multiplier=: (
                OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::learning_rate_multiplier
              ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::learning_rate_multiplier

              attr_reader n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::n_epochs?

              def n_epochs=: (
                OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::n_epochs
              ) -> OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::n_epochs

              def initialize:
                (
                  batch_size: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::batch_size,
                  learning_rate_multiplier: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::learning_rate_multiplier,
                  n_epochs: OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::Hyperparameters::n_epochs
                ) -> void
                | (
                  ?OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::hyperparameters
                  | OpenAI::BaseModel data
                ) -> void

              def to_hash: -> OpenAI::Models::FineTuning::FineTuningJob::Method::Supervised::hyperparameters

              type batch_size = :auto | Integer

              class BatchSize < OpenAI::Union
                def self.variants: -> [:auto, Integer]
              end

              type learning_rate_multiplier = :auto | Float

              class LearningRateMultiplier < OpenAI::Union
                def self.variants: -> [:auto, Float]
              end

              type n_epochs = :auto | Integer

              class NEpochs < OpenAI::Union
                def self.variants: -> [:auto, Integer]
              end
            end
          end

          type type_ = :supervised | :dpo

          class Type < OpenAI::Enum
            SUPERVISED: :supervised
            DPO: :dpo

            def self.values: -> ::Array[OpenAI::Models::FineTuning::FineTuningJob::Method::type_]
          end
        end
      end
    end
  end
end
