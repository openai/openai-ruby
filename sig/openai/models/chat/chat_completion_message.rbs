module OpenAI
  module Models
    
    class ChatCompletionMessage = Chat::ChatCompletionMessage

    module Chat
      type chat_completion_message =
        {
          content: String?,
          refusal: String?,
          role: :assistant,
          audio: OpenAI::Models::Chat::ChatCompletionAudio?,
          function_call: OpenAI::Models::Chat::ChatCompletionMessage::FunctionCall,
          tool_calls: ::Array[OpenAI::Models::Chat::ChatCompletionMessageToolCall]
        }

      class ChatCompletionMessage < OpenAI::BaseModel
        attr_accessor content: String?

        attr_accessor refusal: String?

        attr_accessor role: :assistant

        attr_accessor audio: OpenAI::Models::Chat::ChatCompletionAudio?

        attr_reader function_call: OpenAI::Models::Chat::ChatCompletionMessage::FunctionCall?

        def function_call=: (
          OpenAI::Models::Chat::ChatCompletionMessage::FunctionCall
        ) -> OpenAI::Models::Chat::ChatCompletionMessage::FunctionCall

        attr_reader tool_calls: ::Array[OpenAI::Models::Chat::ChatCompletionMessageToolCall]?

        def tool_calls=: (
          ::Array[OpenAI::Models::Chat::ChatCompletionMessageToolCall]
        ) -> ::Array[OpenAI::Models::Chat::ChatCompletionMessageToolCall]

        def initialize:
          (
            content: String?,
            refusal: String?,
            audio: OpenAI::Models::Chat::ChatCompletionAudio?,
            function_call: OpenAI::Models::Chat::ChatCompletionMessage::FunctionCall,
            tool_calls: ::Array[OpenAI::Models::Chat::ChatCompletionMessageToolCall],
            role: :assistant
          ) -> void
          | (
            ?OpenAI::Models::Chat::chat_completion_message
            | OpenAI::BaseModel data
          ) -> void

        def to_hash: -> OpenAI::Models::Chat::chat_completion_message

        type function_call = { arguments: String, name: String }

        class FunctionCall < OpenAI::BaseModel
          attr_accessor arguments: String

          attr_accessor name: String

          def initialize:
            (arguments: String, name: String) -> void
            | (
              ?OpenAI::Models::Chat::ChatCompletionMessage::function_call
              | OpenAI::BaseModel data
            ) -> void

          def to_hash: -> OpenAI::Models::Chat::ChatCompletionMessage::function_call
        end
      end
    end
  end
end
