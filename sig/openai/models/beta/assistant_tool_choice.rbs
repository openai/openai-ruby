module OpenAI
  module Models
    module Beta
      type assistant_tool_choice =
        {
          type: OpenAI::Models::Beta::AssistantToolChoice::type_,
          function: OpenAI::Models::Beta::AssistantToolChoiceFunction
        }

      class AssistantToolChoice < OpenAI::BaseModel
        attr_accessor type: OpenAI::Models::Beta::AssistantToolChoice::type_

        attr_reader function: OpenAI::Models::Beta::AssistantToolChoiceFunction?

        def function=: (
          OpenAI::Models::Beta::AssistantToolChoiceFunction
        ) -> OpenAI::Models::Beta::AssistantToolChoiceFunction

        def initialize:
          (
            type: OpenAI::Models::Beta::AssistantToolChoice::type_,
            ?function: OpenAI::Models::Beta::AssistantToolChoiceFunction
          ) -> void
          | (
            ?OpenAI::Models::Beta::assistant_tool_choice
            | OpenAI::BaseModel data
          ) -> void

        def to_hash: -> OpenAI::Models::Beta::assistant_tool_choice

        type type_ = :function | :code_interpreter | :file_search

        class Type < OpenAI::Enum
          FUNCTION: :function
          CODE_INTERPRETER: :code_interpreter
          FILE_SEARCH: :file_search

          def self.values: -> ::Array[OpenAI::Models::Beta::AssistantToolChoice::type_]
        end
      end
    end
  end
end
