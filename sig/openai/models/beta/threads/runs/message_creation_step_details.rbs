module OpenAI
  module Models
    module Beta
      module Threads
        module Runs
          type message_creation_step_details =
            {
              message_creation: OpenAI::Models::Beta::Threads::Runs::MessageCreationStepDetails::MessageCreation,
              type: :message_creation
            }

          class MessageCreationStepDetails < OpenAI::BaseModel
            attr_accessor message_creation: OpenAI::Models::Beta::Threads::Runs::MessageCreationStepDetails::MessageCreation

            attr_accessor type: :message_creation

            def initialize: (
              message_creation: OpenAI::Models::Beta::Threads::Runs::MessageCreationStepDetails::MessageCreation,
              ?type: :message_creation
            ) -> void

            def to_hash: -> OpenAI::Models::Beta::Threads::Runs::message_creation_step_details

            type message_creation = { message_id: String }

            class MessageCreation < OpenAI::BaseModel
              attr_accessor message_id: String

              def initialize: (message_id: String) -> void

              def to_hash: -> OpenAI::Models::Beta::Threads::Runs::MessageCreationStepDetails::message_creation
            end
          end
        end
      end
    end
  end
end
