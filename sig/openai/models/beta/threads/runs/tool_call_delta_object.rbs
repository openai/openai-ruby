module OpenAI
  module Models
    module Beta
      module Threads
        module Runs
          type tool_call_delta_object =
            {
              type: :tool_calls,
              tool_calls: ::Array[OpenAI::Models::Beta::Threads::Runs::tool_call_delta]
            }

          class ToolCallDeltaObject < OpenAI::Internal::Type::BaseModel
            attr_accessor type: :tool_calls

            attr_reader tool_calls: ::Array[OpenAI::Models::Beta::Threads::Runs::tool_call_delta]?

            def tool_calls=: (
              ::Array[OpenAI::Models::Beta::Threads::Runs::tool_call_delta]
            ) -> ::Array[OpenAI::Models::Beta::Threads::Runs::tool_call_delta]

            def initialize: (
              ?tool_calls: ::Array[OpenAI::Models::Beta::Threads::Runs::tool_call_delta],
              ?type: :tool_calls
            ) -> void

            def to_hash: -> OpenAI::Models::Beta::Threads::Runs::tool_call_delta_object
          end
        end
      end
    end
  end
end
