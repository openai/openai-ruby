module OpenAI
  module Models
    module Beta
      module VectorStores
        type file_list_params =
          {
            after: String,
            before: String,
            filter: OpenAI::Models::Beta::VectorStores::FileListParams::filter,
            limit: Integer,
            order: OpenAI::Models::Beta::VectorStores::FileListParams::order
          }
          & OpenAI::request_parameters

        class FileListParams < OpenAI::BaseModel
          extend OpenAI::RequestParameters::Converter
          include OpenAI::RequestParameters

          attr_reader after: String?

          def after=: (String) -> String

          attr_reader before: String?

          def before=: (String) -> String

          attr_reader filter: OpenAI::Models::Beta::VectorStores::FileListParams::filter?

          def filter=: (
            OpenAI::Models::Beta::VectorStores::FileListParams::filter
          ) -> OpenAI::Models::Beta::VectorStores::FileListParams::filter

          attr_reader limit: Integer?

          def limit=: (Integer) -> Integer

          attr_reader order: OpenAI::Models::Beta::VectorStores::FileListParams::order?

          def order=: (
            OpenAI::Models::Beta::VectorStores::FileListParams::order
          ) -> OpenAI::Models::Beta::VectorStores::FileListParams::order

          def initialize:
            (
              after: String,
              before: String,
              filter: OpenAI::Models::Beta::VectorStores::FileListParams::filter,
              limit: Integer,
              order: OpenAI::Models::Beta::VectorStores::FileListParams::order,
              request_options: OpenAI::request_opts
            ) -> void
            | (
              ?OpenAI::Models::Beta::VectorStores::file_list_params
              | OpenAI::BaseModel data
            ) -> void

          def to_hash: -> OpenAI::Models::Beta::VectorStores::file_list_params

          type filter = :in_progress | :completed | :failed | :cancelled

          class Filter < OpenAI::Enum
            IN_PROGRESS: :in_progress
            COMPLETED: :completed
            FAILED: :failed
            CANCELLED: :cancelled

            def self.values: -> ::Array[OpenAI::Models::Beta::VectorStores::FileListParams::filter]
          end

          type order = :asc | :desc

          class Order < OpenAI::Enum
            ASC: :asc
            DESC: :desc

            def self.values: -> ::Array[OpenAI::Models::Beta::VectorStores::FileListParams::order]
          end
        end
      end
    end
  end
end
