module OpenAI
  module Models
    module Beta
      type assistant_update_params =
        {
          description: String?,
          instructions: String?,
          metadata: OpenAI::Models::metadata?,
          model: OpenAI::Models::Beta::AssistantUpdateParams::model,
          name: String?,
          reasoning_effort: OpenAI::Models::reasoning_effort?,
          response_format: OpenAI::Models::Beta::assistant_response_format_option?,
          temperature: Float?,
          tool_resources: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources?,
          tools: ::Array[OpenAI::Models::Beta::assistant_tool],
          top_p: Float?
        }
        & OpenAI::request_parameters

      class AssistantUpdateParams < OpenAI::BaseModel
        extend OpenAI::RequestParameters::Converter
        include OpenAI::RequestParameters

        attr_accessor description: String?

        attr_accessor instructions: String?

        attr_accessor metadata: OpenAI::Models::metadata?

        attr_reader model: OpenAI::Models::Beta::AssistantUpdateParams::model?

        def model=: (
          OpenAI::Models::Beta::AssistantUpdateParams::model
        ) -> OpenAI::Models::Beta::AssistantUpdateParams::model

        attr_accessor name: String?

        attr_accessor reasoning_effort: OpenAI::Models::reasoning_effort?

        attr_accessor response_format: OpenAI::Models::Beta::assistant_response_format_option?

        attr_accessor temperature: Float?

        attr_accessor tool_resources: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources?

        attr_reader tools: ::Array[OpenAI::Models::Beta::assistant_tool]?

        def tools=: (
          ::Array[OpenAI::Models::Beta::assistant_tool]
        ) -> ::Array[OpenAI::Models::Beta::assistant_tool]

        attr_accessor top_p: Float?

        def initialize:
          (
            description: String?,
            instructions: String?,
            metadata: OpenAI::Models::metadata?,
            model: OpenAI::Models::Beta::AssistantUpdateParams::model,
            name: String?,
            reasoning_effort: OpenAI::Models::reasoning_effort?,
            response_format: OpenAI::Models::Beta::assistant_response_format_option?,
            temperature: Float?,
            tool_resources: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources?,
            tools: ::Array[OpenAI::Models::Beta::assistant_tool],
            top_p: Float?,
            request_options: OpenAI::request_opts
          ) -> void
          | (
            ?OpenAI::Models::Beta::assistant_update_params
            | OpenAI::BaseModel data
          ) -> void

        def to_hash: -> OpenAI::Models::Beta::assistant_update_params

        type model =
          String
          | :"o3-mini"
          | :"o3-mini-2025-01-31"
          | :o1
          | :"o1-2024-12-17"
          | :"gpt-4o"
          | :"gpt-4o-2024-11-20"
          | :"gpt-4o-2024-08-06"
          | :"gpt-4o-2024-05-13"
          | :"gpt-4o-mini"
          | :"gpt-4o-mini-2024-07-18"
          | :"gpt-4.5-preview"
          | :"gpt-4.5-preview-2025-02-27"
          | :"gpt-4-turbo"
          | :"gpt-4-turbo-2024-04-09"
          | :"gpt-4-0125-preview"
          | :"gpt-4-turbo-preview"
          | :"gpt-4-1106-preview"
          | :"gpt-4-vision-preview"
          | :"gpt-4"
          | :"gpt-4-0314"
          | :"gpt-4-0613"
          | :"gpt-4-32k"
          | :"gpt-4-32k-0314"
          | :"gpt-4-32k-0613"
          | :"gpt-3.5-turbo"
          | :"gpt-3.5-turbo-16k"
          | :"gpt-3.5-turbo-0613"
          | :"gpt-3.5-turbo-1106"
          | :"gpt-3.5-turbo-0125"
          | :"gpt-3.5-turbo-16k-0613"

        class Model < OpenAI::Union
          O3_MINI: :"o3-mini"
          O3_MINI_2025_01_31: :"o3-mini-2025-01-31"
          O1: :o1
          O1_2024_12_17: :"o1-2024-12-17"
          GPT_4O: :"gpt-4o"
          GPT_4O_2024_11_20: :"gpt-4o-2024-11-20"
          GPT_4O_2024_08_06: :"gpt-4o-2024-08-06"
          GPT_4O_2024_05_13: :"gpt-4o-2024-05-13"
          GPT_4O_MINI: :"gpt-4o-mini"
          GPT_4O_MINI_2024_07_18: :"gpt-4o-mini-2024-07-18"
          GPT_4_5_PREVIEW: :"gpt-4.5-preview"
          GPT_4_5_PREVIEW_2025_02_27: :"gpt-4.5-preview-2025-02-27"
          GPT_4_TURBO: :"gpt-4-turbo"
          GPT_4_TURBO_2024_04_09: :"gpt-4-turbo-2024-04-09"
          GPT_4_0125_PREVIEW: :"gpt-4-0125-preview"
          GPT_4_TURBO_PREVIEW: :"gpt-4-turbo-preview"
          GPT_4_1106_PREVIEW: :"gpt-4-1106-preview"
          GPT_4_VISION_PREVIEW: :"gpt-4-vision-preview"
          GPT_4: :"gpt-4"
          GPT_4_0314: :"gpt-4-0314"
          GPT_4_0613: :"gpt-4-0613"
          GPT_4_32K: :"gpt-4-32k"
          GPT_4_32K_0314: :"gpt-4-32k-0314"
          GPT_4_32K_0613: :"gpt-4-32k-0613"
          GPT_3_5_TURBO: :"gpt-3.5-turbo"
          GPT_3_5_TURBO_16K: :"gpt-3.5-turbo-16k"
          GPT_3_5_TURBO_0613: :"gpt-3.5-turbo-0613"
          GPT_3_5_TURBO_1106: :"gpt-3.5-turbo-1106"
          GPT_3_5_TURBO_0125: :"gpt-3.5-turbo-0125"
          GPT_3_5_TURBO_16K_0613: :"gpt-3.5-turbo-16k-0613"

          def self.variants: -> [String, (:"o3-mini"
          | :"o3-mini-2025-01-31"
          | :o1
          | :"o1-2024-12-17"
          | :"gpt-4o"
          | :"gpt-4o-2024-11-20"
          | :"gpt-4o-2024-08-06"
          | :"gpt-4o-2024-05-13"
          | :"gpt-4o-mini"
          | :"gpt-4o-mini-2024-07-18"
          | :"gpt-4.5-preview"
          | :"gpt-4.5-preview-2025-02-27"
          | :"gpt-4-turbo"
          | :"gpt-4-turbo-2024-04-09"
          | :"gpt-4-0125-preview"
          | :"gpt-4-turbo-preview"
          | :"gpt-4-1106-preview"
          | :"gpt-4-vision-preview"
          | :"gpt-4"
          | :"gpt-4-0314"
          | :"gpt-4-0613"
          | :"gpt-4-32k"
          | :"gpt-4-32k-0314"
          | :"gpt-4-32k-0613"
          | :"gpt-3.5-turbo"
          | :"gpt-3.5-turbo-16k"
          | :"gpt-3.5-turbo-0613"
          | :"gpt-3.5-turbo-1106"
          | :"gpt-3.5-turbo-0125"
          | :"gpt-3.5-turbo-16k-0613")]
        end

        type tool_resources =
          {
            code_interpreter: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::CodeInterpreter,
            file_search: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::FileSearch
          }

        class ToolResources < OpenAI::BaseModel
          attr_reader code_interpreter: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::CodeInterpreter?

          def code_interpreter=: (
            OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::CodeInterpreter
          ) -> OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::CodeInterpreter

          attr_reader file_search: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::FileSearch?

          def file_search=: (
            OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::FileSearch
          ) -> OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::FileSearch

          def initialize:
            (
              code_interpreter: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::CodeInterpreter,
              file_search: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::FileSearch
            ) -> void
            | (
              ?OpenAI::Models::Beta::AssistantUpdateParams::tool_resources
              | OpenAI::BaseModel data
            ) -> void

          def to_hash: -> OpenAI::Models::Beta::AssistantUpdateParams::tool_resources

          type code_interpreter = { file_ids: ::Array[String] }

          class CodeInterpreter < OpenAI::BaseModel
            attr_reader file_ids: ::Array[String]?

            def file_ids=: (::Array[String]) -> ::Array[String]

            def initialize:
              (file_ids: ::Array[String]) -> void
              | (
                ?OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::code_interpreter
                | OpenAI::BaseModel data
              ) -> void

            def to_hash: -> OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::code_interpreter
          end

          type file_search = { vector_store_ids: ::Array[String] }

          class FileSearch < OpenAI::BaseModel
            attr_reader vector_store_ids: ::Array[String]?

            def vector_store_ids=: (::Array[String]) -> ::Array[String]

            def initialize:
              (vector_store_ids: ::Array[String]) -> void
              | (
                ?OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::file_search
                | OpenAI::BaseModel data
              ) -> void

            def to_hash: -> OpenAI::Models::Beta::AssistantUpdateParams::ToolResources::file_search
          end
        end
      end
    end
  end
end
