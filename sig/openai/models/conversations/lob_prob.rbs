module OpenAI
  module Models
    module Conversations
      type lob_prob =
        {
          token: String,
          bytes: ::Array[Integer],
          logprob: Float,
          top_logprobs: ::Array[OpenAI::Conversations::TopLogProb]
        }

      class LobProb < OpenAI::Internal::Type::BaseModel
        attr_accessor token: String

        attr_accessor bytes: ::Array[Integer]

        attr_accessor logprob: Float

        attr_accessor top_logprobs: ::Array[OpenAI::Conversations::TopLogProb]

        def initialize: (
          token: String,
          bytes: ::Array[Integer],
          logprob: Float,
          top_logprobs: ::Array[OpenAI::Conversations::TopLogProb]
        ) -> void

        def to_hash: -> {
          token: String,
          bytes: ::Array[Integer],
          logprob: Float,
          top_logprobs: ::Array[OpenAI::Conversations::TopLogProb]
        }
      end
    end
  end
end
