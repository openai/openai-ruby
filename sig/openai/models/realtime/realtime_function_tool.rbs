module OpenAI
  module Models
    module Realtime
      type realtime_function_tool =
        {
          description: String,
          name: String,
          parameters: top,
          type: OpenAI::Models::Realtime::RealtimeFunctionTool::type_
        }

      class RealtimeFunctionTool < OpenAI::Internal::Type::BaseModel
        attr_reader description: String?

        def description=: (String) -> String

        attr_reader name: String?

        def name=: (String) -> String

        attr_reader parameters: top?

        def parameters=: (top) -> top

        attr_reader type: OpenAI::Models::Realtime::RealtimeFunctionTool::type_?

        def type=: (
          OpenAI::Models::Realtime::RealtimeFunctionTool::type_
        ) -> OpenAI::Models::Realtime::RealtimeFunctionTool::type_

        def initialize: (
          ?description: String,
          ?name: String,
          ?parameters: top,
          ?type: OpenAI::Models::Realtime::RealtimeFunctionTool::type_
        ) -> void

        def to_hash: -> {
          description: String,
          name: String,
          parameters: top,
          type: OpenAI::Models::Realtime::RealtimeFunctionTool::type_
        }

        type type_ = :function

        module Type
          extend OpenAI::Internal::Type::Enum

          FUNCTION: :function

          def self?.values: -> ::Array[OpenAI::Models::Realtime::RealtimeFunctionTool::type_]
        end
      end
    end
  end
end
