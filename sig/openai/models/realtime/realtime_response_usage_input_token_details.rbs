module OpenAI
  module Models
    module Realtime
      type realtime_response_usage_input_token_details =
        {
          audio_tokens: Integer,
          cached_tokens: Integer,
          cached_tokens_details: OpenAI::Realtime::RealtimeResponseUsageInputTokenDetails::CachedTokensDetails,
          image_tokens: Integer,
          text_tokens: Integer
        }

      class RealtimeResponseUsageInputTokenDetails < OpenAI::Internal::Type::BaseModel
        attr_reader audio_tokens: Integer?

        def audio_tokens=: (Integer) -> Integer

        attr_reader cached_tokens: Integer?

        def cached_tokens=: (Integer) -> Integer

        attr_reader cached_tokens_details: OpenAI::Realtime::RealtimeResponseUsageInputTokenDetails::CachedTokensDetails?

        def cached_tokens_details=: (
          OpenAI::Realtime::RealtimeResponseUsageInputTokenDetails::CachedTokensDetails
        ) -> OpenAI::Realtime::RealtimeResponseUsageInputTokenDetails::CachedTokensDetails

        attr_reader image_tokens: Integer?

        def image_tokens=: (Integer) -> Integer

        attr_reader text_tokens: Integer?

        def text_tokens=: (Integer) -> Integer

        def initialize: (
          ?audio_tokens: Integer,
          ?cached_tokens: Integer,
          ?cached_tokens_details: OpenAI::Realtime::RealtimeResponseUsageInputTokenDetails::CachedTokensDetails,
          ?image_tokens: Integer,
          ?text_tokens: Integer
        ) -> void

        def to_hash: -> {
          audio_tokens: Integer,
          cached_tokens: Integer,
          cached_tokens_details: OpenAI::Realtime::RealtimeResponseUsageInputTokenDetails::CachedTokensDetails,
          image_tokens: Integer,
          text_tokens: Integer
        }

        type cached_tokens_details =
          { audio_tokens: Integer, image_tokens: Integer, text_tokens: Integer }

        class CachedTokensDetails < OpenAI::Internal::Type::BaseModel
          attr_reader audio_tokens: Integer?

          def audio_tokens=: (Integer) -> Integer

          attr_reader image_tokens: Integer?

          def image_tokens=: (Integer) -> Integer

          attr_reader text_tokens: Integer?

          def text_tokens=: (Integer) -> Integer

          def initialize: (
            ?audio_tokens: Integer,
            ?image_tokens: Integer,
            ?text_tokens: Integer
          ) -> void

          def to_hash: -> {
            audio_tokens: Integer,
            image_tokens: Integer,
            text_tokens: Integer
          }
        end
      end
    end
  end
end
