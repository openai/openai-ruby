module OpenAI
  module Models
    module Realtime
      type transcription_session_updated_event =
        {
          event_id: String,
          session: OpenAI::Realtime::RealtimeTranscriptionSessionCreateResponse,
          type: :"transcription_session.updated"
        }

      class TranscriptionSessionUpdatedEvent < OpenAI::Internal::Type::BaseModel
        attr_accessor event_id: String

        attr_accessor session: OpenAI::Realtime::RealtimeTranscriptionSessionCreateResponse

        attr_accessor type: :"transcription_session.updated"

        def initialize: (
          event_id: String,
          session: OpenAI::Realtime::RealtimeTranscriptionSessionCreateResponse,
          ?type: :"transcription_session.updated"
        ) -> void

        def to_hash: -> {
          event_id: String,
          session: OpenAI::Realtime::RealtimeTranscriptionSessionCreateResponse,
          type: :"transcription_session.updated"
        }
      end
    end
  end
end
