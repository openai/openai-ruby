module OpenAI
  module Models
    module Realtime
      type client_secret_create_response =
        {
          expires_at: Integer,
          session: OpenAI::Models::Realtime::ClientSecretCreateResponse::session,
          value: String
        }

      class ClientSecretCreateResponse < OpenAI::Internal::Type::BaseModel
        attr_accessor expires_at: Integer

        attr_accessor session: OpenAI::Models::Realtime::ClientSecretCreateResponse::session

        attr_accessor value: String

        def initialize: (
          expires_at: Integer,
          session: OpenAI::Models::Realtime::ClientSecretCreateResponse::session,
          value: String
        ) -> void

        def to_hash: -> {
          expires_at: Integer,
          session: OpenAI::Models::Realtime::ClientSecretCreateResponse::session,
          value: String
        }

        type session =
          OpenAI::Realtime::RealtimeSessionCreateResponse
          | OpenAI::Realtime::RealtimeTranscriptionSessionCreateResponse

        module Session
          extend OpenAI::Internal::Type::Union

          def self?.variants: -> ::Array[OpenAI::Models::Realtime::ClientSecretCreateResponse::session]
        end
      end
    end
  end
end
