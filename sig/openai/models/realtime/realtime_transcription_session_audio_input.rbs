module OpenAI
  module Models
    module Realtime
      type realtime_transcription_session_audio_input =
        {
          format_: OpenAI::Models::Realtime::realtime_audio_formats,
          noise_reduction: OpenAI::Realtime::RealtimeTranscriptionSessionAudioInput::NoiseReduction,
          transcription: OpenAI::Realtime::AudioTranscription,
          turn_detection: OpenAI::Models::Realtime::realtime_transcription_session_audio_input_turn_detection?
        }

      class RealtimeTranscriptionSessionAudioInput < OpenAI::Internal::Type::BaseModel
        attr_reader format_: OpenAI::Models::Realtime::realtime_audio_formats?

        def format_=: (
          OpenAI::Models::Realtime::realtime_audio_formats
        ) -> OpenAI::Models::Realtime::realtime_audio_formats

        attr_reader noise_reduction: OpenAI::Realtime::RealtimeTranscriptionSessionAudioInput::NoiseReduction?

        def noise_reduction=: (
          OpenAI::Realtime::RealtimeTranscriptionSessionAudioInput::NoiseReduction
        ) -> OpenAI::Realtime::RealtimeTranscriptionSessionAudioInput::NoiseReduction

        attr_reader transcription: OpenAI::Realtime::AudioTranscription?

        def transcription=: (
          OpenAI::Realtime::AudioTranscription
        ) -> OpenAI::Realtime::AudioTranscription

        attr_accessor turn_detection: OpenAI::Models::Realtime::realtime_transcription_session_audio_input_turn_detection?

        def initialize: (
          ?format_: OpenAI::Models::Realtime::realtime_audio_formats,
          ?noise_reduction: OpenAI::Realtime::RealtimeTranscriptionSessionAudioInput::NoiseReduction,
          ?transcription: OpenAI::Realtime::AudioTranscription,
          ?turn_detection: OpenAI::Models::Realtime::realtime_transcription_session_audio_input_turn_detection?
        ) -> void

        def to_hash: -> {
          format_: OpenAI::Models::Realtime::realtime_audio_formats,
          noise_reduction: OpenAI::Realtime::RealtimeTranscriptionSessionAudioInput::NoiseReduction,
          transcription: OpenAI::Realtime::AudioTranscription,
          turn_detection: OpenAI::Models::Realtime::realtime_transcription_session_audio_input_turn_detection?
        }

        type noise_reduction =
          { type: OpenAI::Models::Realtime::noise_reduction_type }

        class NoiseReduction < OpenAI::Internal::Type::BaseModel
          attr_reader type: OpenAI::Models::Realtime::noise_reduction_type?

          def type=: (
            OpenAI::Models::Realtime::noise_reduction_type
          ) -> OpenAI::Models::Realtime::noise_reduction_type

          def initialize: (
            ?type: OpenAI::Models::Realtime::noise_reduction_type
          ) -> void

          def to_hash: -> {
            type: OpenAI::Models::Realtime::noise_reduction_type
          }
        end
      end
    end
  end
end
