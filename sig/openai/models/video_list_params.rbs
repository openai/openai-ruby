module OpenAI
  module Models
    type video_list_params =
      {
        after: String,
        limit: Integer,
        order: OpenAI::Models::VideoListParams::order
      }
      & OpenAI::Internal::Type::request_parameters

    class VideoListParams < OpenAI::Internal::Type::BaseModel
      extend OpenAI::Internal::Type::RequestParameters::Converter
      include OpenAI::Internal::Type::RequestParameters

      attr_reader after: String?

      def after=: (String) -> String

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_reader order: OpenAI::Models::VideoListParams::order?

      def order=: (
        OpenAI::Models::VideoListParams::order
      ) -> OpenAI::Models::VideoListParams::order

      def initialize: (
        ?after: String,
        ?limit: Integer,
        ?order: OpenAI::Models::VideoListParams::order,
        ?request_options: OpenAI::request_opts
      ) -> void

      def to_hash: -> {
        after: String,
        limit: Integer,
        order: OpenAI::Models::VideoListParams::order,
        request_options: OpenAI::RequestOptions
      }

      type order = :asc | :desc

      module Order
        extend OpenAI::Internal::Type::Enum

        ASC: :asc
        DESC: :desc

        def self?.values: -> ::Array[OpenAI::Models::VideoListParams::order]
      end
    end
  end
end
