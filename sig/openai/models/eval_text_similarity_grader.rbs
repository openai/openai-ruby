module OpenAI
  module Models
    type eval_text_similarity_grader =
      {
        evaluation_metric: OpenAI::Models::EvalTextSimilarityGrader::evaluation_metric,
        input: String,
        pass_threshold: Float,
        reference: String,
        type: :text_similarity,
        name: String
      }

    class EvalTextSimilarityGrader < OpenAI::Internal::Type::BaseModel
      attr_accessor evaluation_metric: OpenAI::Models::EvalTextSimilarityGrader::evaluation_metric

      attr_accessor input: String

      attr_accessor pass_threshold: Float

      attr_accessor reference: String

      attr_accessor type: :text_similarity

      attr_reader name: String?

      def name=: (String) -> String

      def initialize: (
        evaluation_metric: OpenAI::Models::EvalTextSimilarityGrader::evaluation_metric,
        input: String,
        pass_threshold: Float,
        reference: String,
        ?name: String,
        ?type: :text_similarity
      ) -> void

      def to_hash: -> OpenAI::Models::eval_text_similarity_grader

      type evaluation_metric =
        :fuzzy_match
        | :bleu
        | :gleu
        | :meteor
        | :rouge_1
        | :rouge_2
        | :rouge_3
        | :rouge_4
        | :rouge_5
        | :rouge_l
        | :cosine

      module EvaluationMetric
        extend OpenAI::Internal::Type::Enum

        FUZZY_MATCH: :fuzzy_match
        BLEU: :bleu
        GLEU: :gleu
        METEOR: :meteor
        ROUGE_1: :rouge_1
        ROUGE_2: :rouge_2
        ROUGE_3: :rouge_3
        ROUGE_4: :rouge_4
        ROUGE_5: :rouge_5
        ROUGE_L: :rouge_l
        COSINE: :cosine

        def self?.values: -> ::Array[OpenAI::Models::EvalTextSimilarityGrader::evaluation_metric]
      end
    end
  end
end
