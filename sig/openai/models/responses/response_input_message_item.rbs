module OpenAI
  module Models
    module Responses
      type response_input_message_item =
        {
          id: String,
          content: OpenAI::Models::Responses::response_input_message_content_list,
          role: OpenAI::Models::Responses::ResponseInputMessageItem::role,
          status: OpenAI::Models::Responses::ResponseInputMessageItem::status,
          type: OpenAI::Models::Responses::ResponseInputMessageItem::type_
        }

      class ResponseInputMessageItem < OpenAI::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor content: OpenAI::Models::Responses::response_input_message_content_list

        attr_accessor role: OpenAI::Models::Responses::ResponseInputMessageItem::role

        attr_reader status: OpenAI::Models::Responses::ResponseInputMessageItem::status?

        def status=: (
          OpenAI::Models::Responses::ResponseInputMessageItem::status
        ) -> OpenAI::Models::Responses::ResponseInputMessageItem::status

        attr_reader type: OpenAI::Models::Responses::ResponseInputMessageItem::type_?

        def type=: (
          OpenAI::Models::Responses::ResponseInputMessageItem::type_
        ) -> OpenAI::Models::Responses::ResponseInputMessageItem::type_

        def initialize: (
          id: String,
          content: OpenAI::Models::Responses::response_input_message_content_list,
          role: OpenAI::Models::Responses::ResponseInputMessageItem::role,
          ?status: OpenAI::Models::Responses::ResponseInputMessageItem::status,
          ?type: OpenAI::Models::Responses::ResponseInputMessageItem::type_
        ) -> void

        def to_hash: -> OpenAI::Models::Responses::response_input_message_item

        type role = :user | :system | :developer

        module Role
          extend OpenAI::Internal::Type::Enum

          USER: :user
          SYSTEM: :system
          DEVELOPER: :developer

          def self?.values: -> ::Array[OpenAI::Models::Responses::ResponseInputMessageItem::role]
        end

        type status = :in_progress | :completed | :incomplete

        module Status
          extend OpenAI::Internal::Type::Enum

          IN_PROGRESS: :in_progress
          COMPLETED: :completed
          INCOMPLETE: :incomplete

          def self?.values: -> ::Array[OpenAI::Models::Responses::ResponseInputMessageItem::status]
        end

        type type_ = :message

        module Type
          extend OpenAI::Internal::Type::Enum

          MESSAGE: :message

          def self?.values: -> ::Array[OpenAI::Models::Responses::ResponseInputMessageItem::type_]
        end
      end
    end
  end
end
