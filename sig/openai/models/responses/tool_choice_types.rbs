module OpenAI
  module Models
    module Responses
      type tool_choice_types =
        { type: OpenAI::Models::Responses::ToolChoiceTypes::type_ }

      class ToolChoiceTypes < OpenAI::Internal::Type::BaseModel
        attr_accessor type: OpenAI::Models::Responses::ToolChoiceTypes::type_

        def initialize: (
          type: OpenAI::Models::Responses::ToolChoiceTypes::type_
        ) -> void

        def to_hash: -> {
          type: OpenAI::Models::Responses::ToolChoiceTypes::type_
        }

        type type_ =
          :file_search
          | :web_search_preview
          | :computer_use_preview
          | :web_search_preview_2025_03_11
          | :image_generation
          | :code_interpreter

        module Type
          extend OpenAI::Internal::Type::Enum

          FILE_SEARCH: :file_search
          WEB_SEARCH_PREVIEW: :web_search_preview
          COMPUTER_USE_PREVIEW: :computer_use_preview
          WEB_SEARCH_PREVIEW_2025_03_11: :web_search_preview_2025_03_11
          IMAGE_GENERATION: :image_generation
          CODE_INTERPRETER: :code_interpreter

          def self?.values: -> ::Array[OpenAI::Models::Responses::ToolChoiceTypes::type_]
        end
      end
    end
  end
end
