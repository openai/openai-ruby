module OpenAI
  module Models
    module Responses
      type response_includable =
        :"code_interpreter_call.outputs"
        | :"computer_call_output.output.image_url"
        | :"file_search_call.results"
        | :"message.input_image.image_url"
        | :"message.output_text.logprobs"
        | :"reasoning.encrypted_content"

      module ResponseIncludable
        extend OpenAI::Internal::Type::Enum

        CODE_INTERPRETER_CALL_OUTPUTS: :"code_interpreter_call.outputs"
        COMPUTER_CALL_OUTPUT_OUTPUT_IMAGE_URL: :"computer_call_output.output.image_url"
        FILE_SEARCH_CALL_RESULTS: :"file_search_call.results"
        MESSAGE_INPUT_IMAGE_IMAGE_URL: :"message.input_image.image_url"
        MESSAGE_OUTPUT_TEXT_LOGPROBS: :"message.output_text.logprobs"
        REASONING_ENCRYPTED_CONTENT: :"reasoning.encrypted_content"

        def self?.values: -> ::Array[OpenAI::Models::Responses::response_includable]
      end
    end
  end
end
