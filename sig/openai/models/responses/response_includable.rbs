module OpenAI
  module Models
    module Responses
      type response_includable =
        :"file_search_call.results"
        | :"web_search_call.results"
        | :"web_search_call.action.sources"
        | :"message.input_image.image_url"
        | :"computer_call_output.output.image_url"
        | :"code_interpreter_call.outputs"
        | :"reasoning.encrypted_content"
        | :"message.output_text.logprobs"

      module ResponseIncludable
        extend OpenAI::Internal::Type::Enum

        FILE_SEARCH_CALL_RESULTS: :"file_search_call.results"
        WEB_SEARCH_CALL_RESULTS: :"web_search_call.results"
        WEB_SEARCH_CALL_ACTION_SOURCES: :"web_search_call.action.sources"
        MESSAGE_INPUT_IMAGE_IMAGE_URL: :"message.input_image.image_url"
        COMPUTER_CALL_OUTPUT_OUTPUT_IMAGE_URL: :"computer_call_output.output.image_url"
        CODE_INTERPRETER_CALL_OUTPUTS: :"code_interpreter_call.outputs"
        REASONING_ENCRYPTED_CONTENT: :"reasoning.encrypted_content"
        MESSAGE_OUTPUT_TEXT_LOGPROBS: :"message.output_text.logprobs"

        def self?.values: -> ::Array[OpenAI::Models::Responses::response_includable]
      end
    end
  end
end
