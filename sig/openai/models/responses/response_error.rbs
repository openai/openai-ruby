module OpenAI
  module Models
    module Responses
      type response_error =
        {
          code: OpenAI::Models::Responses::ResponseError::code,
          message: String
        }

      class ResponseError < OpenAI::BaseModel
        attr_accessor code: OpenAI::Models::Responses::ResponseError::code

        attr_accessor message: String

        def initialize:
          (
            code: OpenAI::Models::Responses::ResponseError::code,
            message: String
          ) -> void
          | (
            ?OpenAI::Models::Responses::response_error | OpenAI::BaseModel data
          ) -> void

        def to_hash: -> OpenAI::Models::Responses::response_error

        type code =
          :server_error
          | :rate_limit_exceeded
          | :invalid_prompt
          | :vector_store_timeout
          | :invalid_image
          | :invalid_image_format
          | :invalid_base64_image
          | :invalid_image_url
          | :image_too_large
          | :image_too_small
          | :image_parse_error
          | :image_content_policy_violation
          | :invalid_image_mode
          | :image_file_too_large
          | :unsupported_image_media_type
          | :empty_image_file
          | :failed_to_download_image
          | :image_file_not_found

        class Code < OpenAI::Enum
          SERVER_ERROR: :server_error
          RATE_LIMIT_EXCEEDED: :rate_limit_exceeded
          INVALID_PROMPT: :invalid_prompt
          VECTOR_STORE_TIMEOUT: :vector_store_timeout
          INVALID_IMAGE: :invalid_image
          INVALID_IMAGE_FORMAT: :invalid_image_format
          INVALID_BASE64_IMAGE: :invalid_base64_image
          INVALID_IMAGE_URL: :invalid_image_url
          IMAGE_TOO_LARGE: :image_too_large
          IMAGE_TOO_SMALL: :image_too_small
          IMAGE_PARSE_ERROR: :image_parse_error
          IMAGE_CONTENT_POLICY_VIOLATION: :image_content_policy_violation
          INVALID_IMAGE_MODE: :invalid_image_mode
          IMAGE_FILE_TOO_LARGE: :image_file_too_large
          UNSUPPORTED_IMAGE_MEDIA_TYPE: :unsupported_image_media_type
          EMPTY_IMAGE_FILE: :empty_image_file
          FAILED_TO_DOWNLOAD_IMAGE: :failed_to_download_image
          IMAGE_FILE_NOT_FOUND: :image_file_not_found

          def self.values: -> ::Array[OpenAI::Models::Responses::ResponseError::code]
        end
      end
    end
  end
end
