module OpenAI
  module Models
    module Responses
      type response_input_image =
        {
          detail: OpenAI::Models::Responses::ResponseInputImage::detail,
          type: :input_image,
          file_id: String?,
          image_url: String?
        }

      class ResponseInputImage < OpenAI::Internal::Type::BaseModel
        attr_accessor detail: OpenAI::Models::Responses::ResponseInputImage::detail

        attr_accessor type: :input_image

        attr_accessor file_id: String?

        attr_accessor image_url: String?

        def initialize: (
          detail: OpenAI::Models::Responses::ResponseInputImage::detail,
          ?file_id: String?,
          ?image_url: String?,
          ?type: :input_image
        ) -> void

        def to_hash: -> OpenAI::Models::Responses::response_input_image

        type detail = :high | :low | :auto

        module Detail
          extend OpenAI::Internal::Type::Enum

          HIGH: :high
          LOW: :low
          AUTO: :auto

          def self?.values: -> ::Array[OpenAI::Models::Responses::ResponseInputImage::detail]
        end
      end
    end
  end
end
