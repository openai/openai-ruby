module OpenAI
  module Models
    module Responses
      type response_content_part_added_event =
        {
          content_index: Integer,
          item_id: String,
          output_index: Integer,
          part: OpenAI::Models::Responses::ResponseContentPartAddedEvent::part,
          type: :"response.content_part.added"
        }

      class ResponseContentPartAddedEvent < OpenAI::BaseModel
        attr_accessor content_index: Integer

        attr_accessor item_id: String

        attr_accessor output_index: Integer

        attr_accessor part: OpenAI::Models::Responses::ResponseContentPartAddedEvent::part

        attr_accessor type: :"response.content_part.added"

        def initialize:
          (
            content_index: Integer,
            item_id: String,
            output_index: Integer,
            part: OpenAI::Models::Responses::ResponseContentPartAddedEvent::part,
            type: :"response.content_part.added"
          ) -> void
          | (
            ?OpenAI::Models::Responses::response_content_part_added_event
            | OpenAI::BaseModel data
          ) -> void

        def to_hash: -> OpenAI::Models::Responses::response_content_part_added_event

        type part =
          OpenAI::Models::Responses::ResponseOutputText
          | OpenAI::Models::Responses::ResponseOutputRefusal

        class Part < OpenAI::Union
          def self.variants: -> [OpenAI::Models::Responses::ResponseOutputText, OpenAI::Models::Responses::ResponseOutputRefusal]
        end
      end
    end
  end
end
