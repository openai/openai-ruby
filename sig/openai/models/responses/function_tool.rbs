module OpenAI
  module Models
    module Responses
      type function_tool =
        {
          name: String,
          parameters: ::Hash[Symbol, top],
          strict: bool,
          type: :function,
          description: String?
        }

      class FunctionTool < OpenAI::BaseModel
        attr_accessor name: String

        attr_accessor parameters: ::Hash[Symbol, top]

        attr_accessor strict: bool

        attr_accessor type: :function

        attr_accessor description: String?

        def initialize:
          (
            name: String,
            parameters: ::Hash[Symbol, top],
            strict: bool,
            description: String?,
            type: :function
          ) -> void
          | (
            ?OpenAI::Models::Responses::function_tool | OpenAI::BaseModel data
          ) -> void

        def to_hash: -> OpenAI::Models::Responses::function_tool
      end
    end
  end
end
