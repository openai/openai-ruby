module OpenAI
  module Resources
    class FineTuning
      class Jobs
        attr_reader checkpoints: OpenAI::Resources::FineTuning::Jobs::Checkpoints

        def create: (
          model: OpenAI::Models::FineTuning::JobCreateParams::model,
          training_file: String,
          ?hyperparameters: OpenAI::Models::FineTuning::JobCreateParams::Hyperparameters,
          ?integrations: ::Array[OpenAI::Models::FineTuning::JobCreateParams::Integration]?,
          ?metadata: OpenAI::Models::metadata?,
          ?method_: OpenAI::Models::FineTuning::JobCreateParams::Method,
          ?seed: Integer?,
          ?suffix: String?,
          ?validation_file: String?,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Models::FineTuning::FineTuningJob

        def retrieve: (
          String fine_tuning_job_id,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Models::FineTuning::FineTuningJob

        def list: (
          ?after: String,
          ?limit: Integer,
          ?metadata: ::Hash[Symbol, String]?,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::CursorPage[OpenAI::Models::FineTuning::FineTuningJob]

        def cancel: (
          String fine_tuning_job_id,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::Models::FineTuning::FineTuningJob

        def list_events: (
          String fine_tuning_job_id,
          ?after: String,
          ?limit: Integer,
          ?request_options: OpenAI::request_opts
        ) -> OpenAI::CursorPage[OpenAI::Models::FineTuning::FineTuningJobEvent]

        def initialize: (client: OpenAI::Client) -> void
      end
    end
  end
end
