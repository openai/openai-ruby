module OpenAI
  module Resources
    class Beta
      class Threads
        class Messages
          def create: (
            String thread_id,
            content: OpenAI::Models::Beta::Threads::MessageCreateParams::content,
            role: OpenAI::Models::Beta::Threads::MessageCreateParams::role,
            ?attachments: ::Array[OpenAI::Models::Beta::Threads::MessageCreateParams::Attachment]?,
            ?metadata: OpenAI::Models::metadata?,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Models::Beta::Threads::Message

          def retrieve: (
            String message_id,
            thread_id: String,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Models::Beta::Threads::Message

          def update: (
            String message_id,
            thread_id: String,
            ?metadata: OpenAI::Models::metadata?,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Models::Beta::Threads::Message

          def list: (
            String thread_id,
            ?after: String,
            ?before: String,
            ?limit: Integer,
            ?order: OpenAI::Models::Beta::Threads::MessageListParams::order,
            ?run_id: String,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Internal::CursorPage[OpenAI::Models::Beta::Threads::Message]

          def delete: (
            String message_id,
            thread_id: String,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Models::Beta::Threads::MessageDeleted

          def initialize: (client: OpenAI::Client) -> void
        end
      end
    end
  end
end
