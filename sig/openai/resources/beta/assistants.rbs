module OpenAI
  module Resources
    class Beta
      class Assistants
        def create:
          (
            OpenAI::Models::Beta::AssistantCreateParams
            | ::Hash[Symbol, top] params
          ) -> OpenAI::Models::Beta::Assistant
          | (
            model: OpenAI::Models::Beta::AssistantCreateParams::model,
            ?description: String?,
            ?instructions: String?,
            ?metadata: OpenAI::Models::metadata?,
            ?name: String?,
            ?reasoning_effort: OpenAI::Models::reasoning_effort?,
            ?response_format: OpenAI::Models::Beta::assistant_response_format_option?,
            ?temperature: Float?,
            ?tool_resources: OpenAI::Models::Beta::AssistantCreateParams::ToolResources?,
            ?tools: ::Array[OpenAI::Models::Beta::assistant_tool],
            ?top_p: Float?,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Models::Beta::Assistant

        def retrieve:
          (
            String assistant_id,
            ?OpenAI::Models::Beta::AssistantRetrieveParams
            | ::Hash[Symbol, top] params
          ) -> OpenAI::Models::Beta::Assistant
          | (
            String assistant_id,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Models::Beta::Assistant

        def update:
          (
            String assistant_id,
            ?OpenAI::Models::Beta::AssistantUpdateParams
            | ::Hash[Symbol, top] params
          ) -> OpenAI::Models::Beta::Assistant
          | (
            String assistant_id,
            ?description: String?,
            ?instructions: String?,
            ?metadata: OpenAI::Models::metadata?,
            ?model: OpenAI::Models::Beta::AssistantUpdateParams::model,
            ?name: String?,
            ?reasoning_effort: OpenAI::Models::reasoning_effort?,
            ?response_format: OpenAI::Models::Beta::assistant_response_format_option?,
            ?temperature: Float?,
            ?tool_resources: OpenAI::Models::Beta::AssistantUpdateParams::ToolResources?,
            ?tools: ::Array[OpenAI::Models::Beta::assistant_tool],
            ?top_p: Float?,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Models::Beta::Assistant

        def list:
          (
            ?OpenAI::Models::Beta::AssistantListParams
            | ::Hash[Symbol, top] params
          ) -> OpenAI::CursorPage[OpenAI::Models::Beta::Assistant]
          | (
            ?after: String,
            ?before: String,
            ?limit: Integer,
            ?order: OpenAI::Models::Beta::AssistantListParams::order,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::CursorPage[OpenAI::Models::Beta::Assistant]

        def delete:
          (
            String assistant_id,
            ?OpenAI::Models::Beta::AssistantDeleteParams
            | ::Hash[Symbol, top] params
          ) -> OpenAI::Models::Beta::AssistantDeleted
          | (
            String assistant_id,
            ?request_options: OpenAI::request_opts
          ) -> OpenAI::Models::Beta::AssistantDeleted

        def initialize: (client: OpenAI::Client) -> void
      end
    end
  end
end
